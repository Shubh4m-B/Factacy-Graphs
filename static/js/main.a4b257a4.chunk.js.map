{"version":3,"sources":["Components/NavBar.jsx","Components/Chart.jsx","Components/Graph.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","Component","Chart","props","useState","chartData","setChartData","useEffect","labels","chartDataSet","i","push","stats","dataYear","countryValueList","country","value","datasets","label","title","data","backgroundColor","color","fill","borderWidth","chart","options","responsive","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","select","outline","border","Graph","classes","setDataYear","FormControl","variant","Select","labelId","id","onChange","e","target","MenuItem","App","state","name","handleData","bind","tradeSeries","importSeries","exportSeries","tradeDeficitSeries","this","setState","axios","get","then","res","map","parameter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b257a4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../Styles/NavBar.css'\r\n\r\nexport class NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"NavBar\">\r\n                <h2 className=\"NavBar-heading\">Medicants of Ayurvedic System</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst Chart = (props) => {\r\n    const [chartData, setChartData] = useState({})\r\n\r\n    const chart = () => {\r\n        let labels = []\r\n        let chartDataSet = []\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            labels.push(props.stats[props.dataYear - 2015].countryValueList[i].country)\r\n            chartDataSet.push(props.stats[props.dataYear - 2015].countryValueList[i].value)\r\n        }\r\n        setChartData({\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: `${props.title}-${props.dataYear}`,\r\n                    data: chartDataSet,\r\n                    backgroundColor: [\r\n                        props.color\r\n                    ],\r\n                    fill: true,\r\n                    borderWidth: 4\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        chart()\r\n    }, [props.dataYear])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Graph-chart\">\r\n                <Bar data={chartData} options={{\r\n                    responsive: true,\r\n                    title: {\r\n                        text: \"Some title\",\r\n                        display: true\r\n                    },\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    autoSkip: true,\r\n                                    maxTicksLimit: 10,\r\n                                    beginAtZero: true\r\n                                },\r\n                                gridLines: {\r\n                                    display: false,\r\n                                }\r\n                            }\r\n                        ],\r\n                    }\r\n                }} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Chart from './Chart'\r\nimport '../Styles/Graph.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    select: {\r\n        outline: \"none\",\r\n        border: \"none\",\r\n    },\r\n    label: {\r\n        color: \"white\"\r\n    },\r\n\r\n}));\r\n\r\nconst Graph = (props) => {\r\n    const classes = useStyles();\r\n    const [dataYear, setDataYear] = useState(2015)\r\n\r\n    const { title, stats, color } = props.data\r\n\r\n    const handleChange = (e) => {\r\n        setDataYear(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Graph\">\r\n            <div className=\"Graph-header\">\r\n                <h1>{title}</h1>\r\n                <FormControl variant=\"filled\" className={classes.formControl}>\r\n                    {/*<InputLabel id=\"demo-simple-select-outlined-label\" className={classes.label}>Year</InputLabel>*/}\r\n                    <Select\r\n                        labelId=\"simple-select-outlined-label\"\r\n                        id=\"simple-select-outlined\"\r\n                        value={dataYear}\r\n                        onChange={handleChange}\r\n                        label=\"Year\"\r\n                        className={classes.select}\r\n                    >\r\n                        <MenuItem value={2015}>2015</MenuItem>\r\n                        <MenuItem value={2016}>2016</MenuItem>\r\n                        <MenuItem value={2017}>2017</MenuItem>\r\n                        <MenuItem value={2018}>2018</MenuItem>\r\n                        <MenuItem value={2019}>2019</MenuItem>\r\n                        <MenuItem value={2020}>2020</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className=\"Graph-chart\">\r\n                <Chart stats={stats} title={title} dataYear={dataYear} color={color} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Component } from 'react';\nimport NavBar from './Components/NavBar';\nimport Graph from './Components/Graph';\nimport './App.css';\nimport axios from 'axios';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      name: [\"Trade\", \"Import\", \"Export\", \"Trade Deficit\"]\n    }\n    this.handleData = this.handleData.bind(this);\n  }\n  handleData(data) {\n    const tradeSeries = { stats: data.tradeSeries, title: \"Trade\", color: 'rgba(75,192,255,0.7)' };\n    const importSeries = { stats: data.importSeries, title: \"Import\", color: 'rgba(200,192,67,0.7)' };\n    const exportSeries = { stats: data.exportSeries, title: \"Export\", color: 'rgba(20,200,98,0.7)' };\n    const tradeDeficitSeries = { stats: data.tradeDeficitSeries, title: \"Trade Defecit\", color: 'rgba(255,100,20,0.7)' };\n    this.setState({\n      data: [tradeSeries, importSeries, exportSeries, tradeDeficitSeries]\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"https://run.mocky.io/v3/3be6c19d-7ae5-4f84-950c-5b4ab4b22537\")\n      .then(res => {\n        const data = res.data;\n        // console.log(data.exportSeries, data.tradeSeries, data.importSeries, data.tradeDeficitSeries);\n        this.handleData(data);\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"container\">\n          {this.state.data.map((parameter) => (\n            <Graph data={parameter} key={parameter.title} color={parameter.color} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}